rm(list = ls())
graphics.off()
# devtools::install_github("baptiste/ggflags")
library(rvest)
library(dplyr)
library(ggplot2)
library(ggflags)
library(extrafont)
library(tidyr)
loadfonts(quiet = TRUE)
# Get meals information ---------------------------------------------------
url1 <- "http://www.nbcolympics.com/medals"
medals <- read_html(url1) %>%
html_nodes("table") %>%
.[[1]] %>%
html_table() %>%
mutate(code = countrycode::countrycode(Country, "country.name", "iso2c")) %>%
mutate(code = tolower(code)) %>%
gather(medal_color, count, Gold, Silver, Bronze) %>%
arrange(Total) %>%
mutate(medal_color = factor(medal_color, levels = c("Gold", "Silver", "Bronze"))) %>%
rename(country = Country) %>%
drop_na(country, code) %>%
mutate(rank = rank(-Total))
# Get country population --------------------------------------------------
url2 <- "http://www.worldometers.info/world-population/population-by-country/"
world_population <- read_html(url2) %>%
html_nodes("table") %>%
.[[1]] %>%
html_table() %>%
select(
country = `Country (or dependency)`,
population = `Population(2016)`,
Med.Age
) %>%
mutate(code = countrycode::countrycode(country, "country.name", "iso2c")) %>%
mutate(population = readr::parse_number(population)) %>%
mutate(Med.Age = readr::parse_number(Med.Age)) %>%
mutate(code = tolower(code)) %>%
drop_na(country, population, code)
# Merge -------------------------------------------------------------------
res2 <- medals %>%
group_by(code) %>%
summarise(total = sum(count)) %>%
left_join(world_population, by = "code") %>%
mutate(normalized_count = total / population)
# Plot --------------------------------------------------------------------
p1 <- medals %>%
ggplot(aes(x = reorder(country, -Total), y = count)) +
geom_bar(stat = "identity", aes(fill = medal_color)) +
# geom_flag(aes(country = code), size = 5) +
theme_bw(base_family = "Open Sans") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 7, vjust = 0.5)) +
scale_fill_manual(
values = c(
"Gold" = "gold",
"Bronze" = "#cd7f32",
"Silver" = "#C0C0C0"
)
) +
xlab("Country") +
ylab("Total number of medals") +
theme(legend.justification = c(1, 1), legend.position = c(1, 1)) +
theme(legend.title = element_blank()) +
theme(axis.title.x = element_blank())
p2 <- res2 %>%
ggplot(aes(x = reorder(country, -normalized_count), y = normalized_count)) +
geom_bar(stat = "identity") +
# geom_flag(aes(country = code), size = 5) +
theme_bw(base_family = "Open Sans") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 7, vjust = 0.5)) +
xlab("Country") +
ylab("Relative number of medals") +
labs(caption = paste(url1, url2, sep = "\n")) +
theme(axis.title.x = element_blank()) +
labs(subtitle = paste("Date:", Sys.time())) +
theme(legend.justification = c(1, 1), legend.position = c(1, 1)) +
scale_fill_gradient(low = "blue", high = "red") +
geom_text(aes(label = format(population, big.mark = " ")), angle = 90, hjust = 0, size = 1.5)
p <- cowplot::plot_grid(p1, p2, ncol = 1, align = "hv")
p
install.packages("cowplot")
install.packages("countrycode")
rm(list = ls())
graphics.off()
# devtools::install_github("baptiste/ggflags")
library(rvest)
library(dplyr)
library(ggplot2)
library(ggflags)
library(extrafont)
library(tidyr)
loadfonts(quiet = TRUE)
# Get meals information ---------------------------------------------------
url1 <- "http://www.nbcolympics.com/medals"
medals <- read_html(url1) %>%
html_nodes("table") %>%
.[[1]] %>%
html_table() %>%
mutate(code = countrycode::countrycode(Country, "country.name", "iso2c")) %>%
mutate(code = tolower(code)) %>%
gather(medal_color, count, Gold, Silver, Bronze) %>%
arrange(Total) %>%
mutate(medal_color = factor(medal_color, levels = c("Gold", "Silver", "Bronze"))) %>%
rename(country = Country) %>%
drop_na(country, code) %>%
mutate(rank = rank(-Total))
# Get country population --------------------------------------------------
url2 <- "http://www.worldometers.info/world-population/population-by-country/"
world_population <- read_html(url2) %>%
html_nodes("table") %>%
.[[1]] %>%
html_table() %>%
select(
country = `Country (or dependency)`,
population = `Population(2016)`,
Med.Age
) %>%
mutate(code = countrycode::countrycode(country, "country.name", "iso2c")) %>%
mutate(population = readr::parse_number(population)) %>%
mutate(Med.Age = readr::parse_number(Med.Age)) %>%
mutate(code = tolower(code)) %>%
drop_na(country, population, code)
# Merge -------------------------------------------------------------------
res2 <- medals %>%
group_by(code) %>%
summarise(total = sum(count)) %>%
left_join(world_population, by = "code") %>%
mutate(normalized_count = total / population)
# Plot --------------------------------------------------------------------
p1 <- medals %>%
ggplot(aes(x = reorder(country, -Total), y = count)) +
geom_bar(stat = "identity", aes(fill = medal_color)) +
# geom_flag(aes(country = code), size = 5) +
theme_bw(base_family = "Open Sans") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 7, vjust = 0.5)) +
scale_fill_manual(
values = c(
"Gold" = "gold",
"Bronze" = "#cd7f32",
"Silver" = "#C0C0C0"
)
) +
xlab("Country") +
ylab("Total number of medals") +
theme(legend.justification = c(1, 1), legend.position = c(1, 1)) +
theme(legend.title = element_blank()) +
theme(axis.title.x = element_blank())
p2 <- res2 %>%
ggplot(aes(x = reorder(country, -normalized_count), y = normalized_count)) +
geom_bar(stat = "identity") +
# geom_flag(aes(country = code), size = 5) +
theme_bw(base_family = "Open Sans") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 7, vjust = 0.5)) +
xlab("Country") +
ylab("Relative number of medals") +
labs(caption = paste(url1, url2, sep = "\n")) +
theme(axis.title.x = element_blank()) +
labs(subtitle = paste("Date:", Sys.time())) +
theme(legend.justification = c(1, 1), legend.position = c(1, 1)) +
scale_fill_gradient(low = "blue", high = "red") +
geom_text(aes(label = format(population, big.mark = " ")), angle = 90, hjust = 0, size = 1.5)
p <- cowplot::plot_grid(p1, p2, ncol = 1, align = "hv")
p
library(viridis)
library(ggplot2)
ggplot(faithfuld, aes(waiting, eruptions)) +
geom_raster(aes(fill = density)) +
scale_fill_viridis()
source('/media/persican/Philippe Massicotte/Phil/blog/rmd_to_jekyll.R', echo=TRUE)
KnitPost()
KnitPost()
KnitPost()
source('/media/persican/Philippe Massicotte/Phil/blog/rmd_to_jekyll.R', echo=TRUE)
KnitPost()
KnitPost()
KnitPost("2016-08-25-olympics2016.Rmd")
KnitPost()
KnitPost()
